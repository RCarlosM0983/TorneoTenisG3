/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controles.Conexion;
import Controles.EncuentroData;
import Controles.TorneoData;
import Modelos.Encuentro;
import Modelos.Estadio;
import Modelos.Jugador;
import Modelos.Torneo;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlo_000
 */
public class VActualizarEncuentro extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo;
    /**
     * Creates new form VActualizarEncuentro
     */
    public VActualizarEncuentro() {
        initComponents();
        modelo = new DefaultTableModel();
        armarCabecera();
        llenarTablaEncuentros();
        llenarComboTorneo();
        jcbTodos.setSelected(true);
    }
    private void armarCabecera(){
        ArrayList<Object>columnas = new ArrayList<>();
        columnas.add("Id Encuentro");
        columnas.add("Torneo");       
        columnas.add("Jugador 1");
        columnas.add("Jugador 2");
        columnas.add("Ganador");
        columnas.add("Fecha");
        columnas.add("Estadio");
        for(Object titulo: columnas){
            modelo.addColumn(titulo);
        }
        jtEncuentros.setModel(modelo);
    }
    private void llenarComboTorneo(){
        Conexion c = new Conexion();
        TorneoData td = new TorneoData(c);
        ArrayList<Torneo>torneos = td.obtenerTorneos();       
        for(Torneo t: torneos){
            
           jcbTorneo.addItem(t);
        }
    }
     private void borrarFilasTabla(){
    
        int fila = modelo.getRowCount()-1;
        for (int i = fila; i >= 0; i--) {
            modelo.removeRow(i);
            
        }
    }
     private void llenarTablaEncuentros() {
        ArrayList<Encuentro>encuentros = new ArrayList<>();
        borrarFilasTabla();
        Conexion c = new Conexion();
        EncuentroData ed = new EncuentroData(c);
        encuentros = ed.todosLosEncuentros();
        for(Encuentro en: encuentros){
            
           modelo.addRow(new Object[] {en.getId_encuentro(), en.getTorneo(), en.getJugador1(), en.getJugador2(), en.getGanador(), en.getFechaEnc(), en.getEstadio()});
        }
    }
     private void llenarTablaEncuentrosXTorneo() {
        ArrayList<Encuentro>encuentros = new ArrayList<>();
        borrarFilasTabla();
        Conexion c = new Conexion();
        Torneo t = (Torneo)jcbTorneo.getSelectedItem();
        int id = t.getIdTorneo();
        EncuentroData ed = new EncuentroData(c);
        encuentros = (ArrayList)ed.listaEncuentrosXTorneo(id);
        for(Encuentro en: encuentros){
            
           modelo.addRow(new Object[] {en.getId_encuentro(), en.getTorneo(), en.getJugador1(), en.getJugador2(), en.getGanador(), en.getFechaEnc(), en.getEstadio()});
        }
    }
    
     private void limpiar(){
        jtfIdEncuentro.setText("");
        jtfJ1.setText("");
        jtfJ2.setText("");
        jtfEstadio.setText("");
        jrbJ1.setSelected(false);
        jrbJ2.setSelected(false);
        jcbFinalizado.setSelected(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfIdEncuentro = new javax.swing.JTextField();
        jbBuscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jdcFechaEnc = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jcbFinalizado = new javax.swing.JCheckBox();
        jrbJ1 = new javax.swing.JRadioButton();
        jrbJ2 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtEncuentros = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jbActualizar = new javax.swing.JButton();
        jcbTorneo = new javax.swing.JComboBox<>();
        jtfJ1 = new javax.swing.JTextField();
        jtfJ2 = new javax.swing.JTextField();
        jtfEstadio = new javax.swing.JTextField();
        jbEliminar = new javax.swing.JButton();
        jcbTodos = new javax.swing.JCheckBox();
        jcbEnXT = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Actualizar Encuentro");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Id Encuentro");

        jtfIdEncuentro.setEnabled(false);

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.setEnabled(false);
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Torneo");

        jdcFechaEnc.setDateFormatString("yyyy/MM/dd");
        jdcFechaEnc.setEnabled(false);
        jdcFechaEnc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Fecha de Encuentro");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Jugador 1");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Jugador 2");

        jcbFinalizado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcbFinalizado.setText("Finalizado");

        jrbJ1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbJ1ActionPerformed(evt);
            }
        });

        jrbJ2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbJ2ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Ganador");

        jtEncuentros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtEncuentros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtEncuentrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtEncuentros);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Encuentros");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Estadio");

        jbActualizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbActualizar.setText("Actualizar");
        jbActualizar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });

        jcbTorneo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jtfJ1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfJ1.setEnabled(false);

        jtfJ2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfJ2.setEnabled(false);

        jtfEstadio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfEstadio.setEnabled(false);

        jbEliminar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbEliminar.setText("Eliminar");
        jbEliminar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jcbTodos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcbTodos.setText("Todos los Encuentros");
        jcbTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTodosActionPerformed(evt);
            }
        });

        jcbEnXT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcbEnXT.setText("Encuentro por Torneo");
        jcbEnXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEnXTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfIdEncuentro, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jtfEstadio, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jdcFechaEnc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                            .addComponent(jcbTorneo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jtfJ2, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtfJ1, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(63, 63, 63)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jrbJ1)
                                            .addComponent(jrbJ2)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jcbFinalizado)
                                        .addGap(77, 77, 77)
                                        .addComponent(jbActualizar)
                                        .addGap(57, 57, 57)
                                        .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jcbEnXT)
                .addGap(85, 85, 85)
                .addComponent(jcbTodos)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfIdEncuentro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jcbTorneo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jbBuscar)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jdcFechaEnc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jtfJ1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jrbJ1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfJ2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jrbJ2))))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel10))
                    .addComponent(jtfEstadio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbFinalizado)
                            .addComponent(jbActualizar)
                            .addComponent(jbEliminar))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel9)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbTodos)
                    .addComponent(jcbEnXT))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtEncuentrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtEncuentrosMouseClicked
        // TODO add your handling code here:
        Conexion c = new Conexion();
        EncuentroData ed = new EncuentroData(c);
        int seleccion = jtEncuentros.rowAtPoint(evt.getPoint());
        jtfIdEncuentro.setText(String.valueOf(jtEncuentros.getValueAt(seleccion,0)));
        jtfJ1.setText(String.valueOf(jtEncuentros.getValueAt(seleccion,2)));
        jtfJ2.setText(String.valueOf (jtEncuentros.getValueAt(seleccion,3)));
        jtfEstadio.setText(String.valueOf (jtEncuentros.getValueAt(seleccion,6)));
        
        jdcFechaEnc.setEnabled(true);
        int idE = Integer.parseInt(jtfIdEncuentro.getText());
        Date fecha = java.sql.Date.valueOf(ed.buscarEncuentro(idE).getFechaEnc());
        Jugador j1 = ed.buscarEncuentro(idE).getJugador1();
        Jugador j2 = ed.buscarEncuentro(idE).getJugador2();
        Jugador ganador =  ed.buscarEncuentro(idE).getGanador();
        boolean finalizado = ed.buscarEncuentro(idE).isFinalizado();
        
        jdcFechaEnc.setDate(fecha);
        jcbFinalizado.setSelected(finalizado);
  
        if(ganador == null){
        jrbJ1.setSelected(false);
        jrbJ2.setSelected(false);
          }else if(ganador.getIdJugador() == j2.getIdJugador()){
            jrbJ2.setSelected(true);
            jrbJ1.setSelected(false);
          }else{
           jrbJ2.setSelected(false);
           jrbJ1.setSelected(true); 
        }
        
    }//GEN-LAST:event_jtEncuentrosMouseClicked

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:
        borrarFilasTabla();
        llenarTablaEncuentrosXTorneo();
        jdcFechaEnc.setEnabled(true);
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        // TODO add your handling code here:
        if(jtfIdEncuentro.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Debe buscar y seleccionar un encuentro para poder actualizarlo");
        }else if(jcbFinalizado.isSelected()&& jrbJ1.isSelected()== false && jrbJ2.isSelected()== false){
           JOptionPane.showMessageDialog(this, "Debe marcar un ganador");
       } else if((jrbJ1.isSelected() || jrbJ2.isSelected()) && jcbFinalizado.isSelected() == false){
          JOptionPane.showMessageDialog(this, "Si marca un ganador debe marcar el encuentro como finalizado"); 
       }
       else{
       Conexion c = new Conexion();
       EncuentroData ed = new EncuentroData(c);
       Jugador ganador = new Jugador();
       boolean activo = jcbFinalizado.isSelected();
       int id = Integer.parseInt(jtfIdEncuentro.getText());
       LocalDate fecha = Instant.ofEpochMilli((jdcFechaEnc.getDate()).getTime()).atZone(ZoneId.systemDefault()).toLocalDate();
       Jugador j1 = ed.buscarEncuentro(id).getJugador1();
       Jugador j2 = ed.buscarEncuentro(id).getJugador2();
       if(jrbJ1.isSelected()){
           ganador = j1;
       }
       if(jrbJ2.isSelected()){
           ganador = j2;
       }
       boolean finalizado = jcbFinalizado.isSelected();
       Estadio estadio = ed.buscarEncuentro(id).getEstadio();
       Torneo torneo = ed.buscarEncuentro(id).getTorneo();
       Encuentro e = new Encuentro(id, fecha, finalizado, ganador, j1, j2, estadio, torneo, activo);
       ed.actualizarEncuentro(e);
       borrarFilasTabla();
       llenarTablaEncuentrosXTorneo();
       limpiar();
       }
    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jrbJ1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbJ1ActionPerformed
        // TODO add your handling code here:
        jrbJ2.setSelected(false);    
    }//GEN-LAST:event_jrbJ1ActionPerformed

    private void jrbJ2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbJ2ActionPerformed
        // TODO add your handling code here:
        jrbJ1.setSelected(false);
    }//GEN-LAST:event_jrbJ2ActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:
        if(jtfIdEncuentro.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Debe buscar y seleccionar un encuentro para poder eliminarlo");
        }else{
        Conexion c = new Conexion();
        EncuentroData ed = new EncuentroData(c);
        int id = Integer.parseInt(jtfIdEncuentro.getText());
        ed.borrarEncuentro(id);
        limpiar();
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jcbTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTodosActionPerformed
        // TODO add your handling code here:
        borrarFilasTabla();
        jcbEnXT.setSelected(false);
        if(jcbTodos.isSelected()){
           llenarTablaEncuentros();
           jbBuscar.setEnabled(false);
        }else{
            borrarFilasTabla();
        }
    }//GEN-LAST:event_jcbTodosActionPerformed

    private void jcbEnXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEnXTActionPerformed
        // TODO add your handling code here:
         borrarFilasTabla();
         jbBuscar.setEnabled(true);
         jcbTodos.setSelected(false);
    }//GEN-LAST:event_jcbEnXTActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JCheckBox jcbEnXT;
    private javax.swing.JCheckBox jcbFinalizado;
    private javax.swing.JCheckBox jcbTodos;
    private javax.swing.JComboBox<Torneo> jcbTorneo;
    private com.toedter.calendar.JDateChooser jdcFechaEnc;
    private javax.swing.JRadioButton jrbJ1;
    private javax.swing.JRadioButton jrbJ2;
    private javax.swing.JTable jtEncuentros;
    private javax.swing.JTextField jtfEstadio;
    private javax.swing.JTextField jtfIdEncuentro;
    private javax.swing.JTextField jtfJ1;
    private javax.swing.JTextField jtfJ2;
    // End of variables declaration//GEN-END:variables
}
